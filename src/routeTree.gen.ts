/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ApiImport } from './routes/_api'
import { Route as IndexImport } from './routes/index'
import { Route as ApiSearchIndexImport } from './routes/_api/search/index'
import { Route as ApiPlayerIndexImport } from './routes/_api/player/index'
import { Route as ApiLoginIndexImport } from './routes/_api/login/index'
import { Route as ApiHomeIndexImport } from './routes/_api/home/index'
import { Route as ApiFavoriteIndexImport } from './routes/_api/favorite/index'
import { Route as SetupServerListImport } from './routes/setup/server.list'
import { Route as SetupServerAddImport } from './routes/setup/server.add'
import { Route as ApiSeriesIdImport } from './routes/_api/series/$id'
import { Route as ApiPlaylistIdImport } from './routes/_api/playlist/$id'
import { Route as ApiPersonIdImport } from './routes/_api/person/$id'
import { Route as ApiLoginManualImport } from './routes/_api/login/manual'
import { Route as ApiLoginListImport } from './routes/_api/login/list'
import { Route as ApiLibraryIdImport } from './routes/_api/library/$id'
import { Route as ApiItemIdImport } from './routes/_api/item/$id'
import { Route as ApiEpisodeIdImport } from './routes/_api/episode/$id'
import { Route as ApiBoxsetIdImport } from './routes/_api/boxset/$id'
import { Route as ApiArtistIdImport } from './routes/_api/artist/$id'
import { Route as ApiAlbumIdImport } from './routes/_api/album/$id'
import { Route as ApiLoginUserIdUserNameImport } from './routes/_api/login/$userId.$userName'

// Create/Update Routes

const ApiRoute = ApiImport.update({
  id: '/_api',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ApiSearchIndexRoute = ApiSearchIndexImport.update({
  path: '/search/',
  getParentRoute: () => ApiRoute,
} as any)

const ApiPlayerIndexRoute = ApiPlayerIndexImport.update({
  path: '/player/',
  getParentRoute: () => ApiRoute,
} as any)

const ApiLoginIndexRoute = ApiLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => ApiRoute,
} as any)

const ApiHomeIndexRoute = ApiHomeIndexImport.update({
  path: '/home/',
  getParentRoute: () => ApiRoute,
} as any)

const ApiFavoriteIndexRoute = ApiFavoriteIndexImport.update({
  path: '/favorite/',
  getParentRoute: () => ApiRoute,
} as any)

const SetupServerListRoute = SetupServerListImport.update({
  path: '/setup/server/list',
  getParentRoute: () => rootRoute,
} as any)

const SetupServerAddRoute = SetupServerAddImport.update({
  path: '/setup/server/add',
  getParentRoute: () => rootRoute,
} as any)

const ApiSeriesIdRoute = ApiSeriesIdImport.update({
  path: '/series/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiPlaylistIdRoute = ApiPlaylistIdImport.update({
  path: '/playlist/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiPersonIdRoute = ApiPersonIdImport.update({
  path: '/person/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiLoginManualRoute = ApiLoginManualImport.update({
  path: '/login/manual',
  getParentRoute: () => ApiRoute,
} as any)

const ApiLoginListRoute = ApiLoginListImport.update({
  path: '/login/list',
  getParentRoute: () => ApiRoute,
} as any)

const ApiLibraryIdRoute = ApiLibraryIdImport.update({
  path: '/library/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiItemIdRoute = ApiItemIdImport.update({
  path: '/item/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiEpisodeIdRoute = ApiEpisodeIdImport.update({
  path: '/episode/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiBoxsetIdRoute = ApiBoxsetIdImport.update({
  path: '/boxset/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiArtistIdRoute = ApiArtistIdImport.update({
  path: '/artist/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiAlbumIdRoute = ApiAlbumIdImport.update({
  path: '/album/$id',
  getParentRoute: () => ApiRoute,
} as any)

const ApiLoginUserIdUserNameRoute = ApiLoginUserIdUserNameImport.update({
  path: '/login/$userId/$userName',
  getParentRoute: () => ApiRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_api': {
      preLoaderRoute: typeof ApiImport
      parentRoute: typeof rootRoute
    }
    '/_api/album/$id': {
      preLoaderRoute: typeof ApiAlbumIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/artist/$id': {
      preLoaderRoute: typeof ApiArtistIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/boxset/$id': {
      preLoaderRoute: typeof ApiBoxsetIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/episode/$id': {
      preLoaderRoute: typeof ApiEpisodeIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/item/$id': {
      preLoaderRoute: typeof ApiItemIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/library/$id': {
      preLoaderRoute: typeof ApiLibraryIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/login/list': {
      preLoaderRoute: typeof ApiLoginListImport
      parentRoute: typeof ApiImport
    }
    '/_api/login/manual': {
      preLoaderRoute: typeof ApiLoginManualImport
      parentRoute: typeof ApiImport
    }
    '/_api/person/$id': {
      preLoaderRoute: typeof ApiPersonIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/playlist/$id': {
      preLoaderRoute: typeof ApiPlaylistIdImport
      parentRoute: typeof ApiImport
    }
    '/_api/series/$id': {
      preLoaderRoute: typeof ApiSeriesIdImport
      parentRoute: typeof ApiImport
    }
    '/setup/server/add': {
      preLoaderRoute: typeof SetupServerAddImport
      parentRoute: typeof rootRoute
    }
    '/setup/server/list': {
      preLoaderRoute: typeof SetupServerListImport
      parentRoute: typeof rootRoute
    }
    '/_api/favorite/': {
      preLoaderRoute: typeof ApiFavoriteIndexImport
      parentRoute: typeof ApiImport
    }
    '/_api/home/': {
      preLoaderRoute: typeof ApiHomeIndexImport
      parentRoute: typeof ApiImport
    }
    '/_api/login/': {
      preLoaderRoute: typeof ApiLoginIndexImport
      parentRoute: typeof ApiImport
    }
    '/_api/player/': {
      preLoaderRoute: typeof ApiPlayerIndexImport
      parentRoute: typeof ApiImport
    }
    '/_api/search/': {
      preLoaderRoute: typeof ApiSearchIndexImport
      parentRoute: typeof ApiImport
    }
    '/_api/login/$userId/$userName': {
      preLoaderRoute: typeof ApiLoginUserIdUserNameImport
      parentRoute: typeof ApiImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ApiRoute.addChildren([
    ApiAlbumIdRoute,
    ApiArtistIdRoute,
    ApiBoxsetIdRoute,
    ApiEpisodeIdRoute,
    ApiItemIdRoute,
    ApiLibraryIdRoute,
    ApiLoginListRoute,
    ApiLoginManualRoute,
    ApiPersonIdRoute,
    ApiPlaylistIdRoute,
    ApiSeriesIdRoute,
    ApiFavoriteIndexRoute,
    ApiHomeIndexRoute,
    ApiLoginIndexRoute,
    ApiPlayerIndexRoute,
    ApiSearchIndexRoute,
    ApiLoginUserIdUserNameRoute,
  ]),
  SetupServerAddRoute,
  SetupServerListRoute,
])

/* prettier-ignore-end */
